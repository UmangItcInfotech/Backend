version: '3.7'

services:
  user:
    image: userservice
    build:
      context: ./UserServices
      dockerfile: Dockerfile
    ports:
      - "5004:8080"
    networks:
      - backend-network
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"

  image:
    image: imageservice
    build:
      context: ./ImageServices
      dockerfile: Dockerfile
    ports:
      - "5005:8080"
    networks:
      - backend-network
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"

  comment:
    image: commentservice
    build:
      context: ./CommentServices
      dockerfile: Dockerfile
    ports:
      - "5003:8080"
    networks:
      - backend-network
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"

  blog:
    image: blogservice
    build:
      context: ./BlogServices
      dockerfile: Dockerfile
    ports:
      - "5002:8080"
    networks:
      - backend-network
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "LatestBlogDB"
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge
