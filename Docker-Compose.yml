version: '3'
services:
  api_gateway:
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    networks:
      - my_network
    depends_on:
      - postgres_db

  blog_service:
    build:
      context: .
      dockerfile: BlogServices/Dockerfile
    ports:
      - "8082:8082"
    networks:
      - my_network
    depends_on:
      - postgres_db

  comment_service:
    build:
      context: .
      dockerfile: CommentServices/Dockerfile
    ports:
      - "8084:8084"
    networks:
      - my_network
    depends_on:
      - postgres_db

  consul_service:
    build:
      context: .
      dockerfile: ConsulServices/Dockerfile
    ports:
      - "8083:8083"
    networks:
      - my_network
    depends_on:
      - postgres_db

  image_service:
    build:
      context: .
      dockerfile: ImageServices/Dockerfile
    ports:
      - "8085:8085"
    networks:
      - my_network
    depends_on:
      - postgres_db

  user_service:
    build:
      context: .
      dockerfile: UserServices/Dockerfile
    ports:
      - "8086:8086"
    networks:
      - my_network
    depends_on:
      - postgres_db

  postgres_db:
    container_name: postgres_db
    image: postgres:13
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    networks:
      - my_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  my_network:
    driver: bridge

volumes:
  postgres_data:

